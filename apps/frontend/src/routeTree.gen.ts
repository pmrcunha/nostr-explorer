/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingsRelaysRouteImport } from './routes/settings/relays'
import { Route as SettingsQueriesRouteImport } from './routes/settings/queries'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRelaysRoute = SettingsRelaysRouteImport.update({
  id: '/relays',
  path: '/relays',
  getParentRoute: () => SettingsRoute,
} as any)
const SettingsQueriesRoute = SettingsQueriesRouteImport.update({
  id: '/queries',
  path: '/queries',
  getParentRoute: () => SettingsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteWithChildren
  '/settings/queries': typeof SettingsQueriesRoute
  '/settings/relays': typeof SettingsRelaysRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteWithChildren
  '/settings/queries': typeof SettingsQueriesRoute
  '/settings/relays': typeof SettingsRelaysRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteWithChildren
  '/settings/queries': typeof SettingsQueriesRoute
  '/settings/relays': typeof SettingsRelaysRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/settings' | '/settings/queries' | '/settings/relays'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/settings' | '/settings/queries' | '/settings/relays'
  id: '__root__' | '/' | '/settings' | '/settings/queries' | '/settings/relays'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SettingsRoute: typeof SettingsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/relays': {
      id: '/settings/relays'
      path: '/relays'
      fullPath: '/settings/relays'
      preLoaderRoute: typeof SettingsRelaysRouteImport
      parentRoute: typeof SettingsRoute
    }
    '/settings/queries': {
      id: '/settings/queries'
      path: '/queries'
      fullPath: '/settings/queries'
      preLoaderRoute: typeof SettingsQueriesRouteImport
      parentRoute: typeof SettingsRoute
    }
  }
}

interface SettingsRouteChildren {
  SettingsQueriesRoute: typeof SettingsQueriesRoute
  SettingsRelaysRoute: typeof SettingsRelaysRoute
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsQueriesRoute: SettingsQueriesRoute,
  SettingsRelaysRoute: SettingsRelaysRoute,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(
  SettingsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SettingsRoute: SettingsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
